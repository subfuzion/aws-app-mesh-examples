---
Parameters:

  Prefix:
    Type: String
    Description: Prefix name that joins all the stacks

Resources:

  ColorGatewayService:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Fn::ImportValue:
          !Sub '${Prefix}:Cluster'
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: 1
      LaunchType: 'FARGATE'
      ServiceRegistries:
        - RegistryArn:
            Fn::ImportValue:
              !Sub "${Prefix}:ColorGatewayServiceRegistryArn"
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::ImportValue:
                !Sub "${Prefix}:SecurityGroup"
          Subnets:
            - Fn::ImportValue:
                !Sub '${Prefix}-vpc:PrivateSubnet1'
            - Fn::ImportValue:
                !Sub '${Prefix}-vpc:PrivateSubnet2'
      TaskDefinition: !Ref ColorGatewayTaskDefinition
      LoadBalancers:
        - ContainerName: app
          ContainerPort: 9080
          TargetGroupArn:
            Fn::ImportValue:
              !Sub "${Prefix}:WebTargetGroup"

  ColorGatewayTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - 'FARGATE'
      Family: 'colorgateway'
      NetworkMode: 'awsvpc'
      Cpu: 512
      Memory: 1024
      TaskRoleArn:
        Fn::ImportValue:
          !Sub "${Prefix}:TaskIamRole"
      ExecutionRoleArn:
        Fn::ImportValue:
          !Sub "${Prefix}:TaskExecutionIamRole"
      ProxyConfiguration:
        Type: 'APPMESH'
        ContainerName: 'envoy'
        ProxyConfigurationProperties:
          - Name: 'IgnoredUID'
            Value: '1337'
          - Name: 'ProxyIngressPort'
            Value: '15000'
          - Name: 'ProxyEgressPort'
            Value: '15001'
          - Name: 'AppPorts'
            Value: '9080'
          - Name: 'EgressIgnoredIPs'
            Value: '169.254.170.2,169.254.169.254'
      ContainerDefinitions:
        - Name: 'app'
          Image: subfuzion/colorgateway
          Essential: true
          LogConfiguration:
            LogDriver: 'awslogs'
            Options:
              awslogs-group: !Sub '${Prefix}-log-group'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: 'colorgateway'
          PortMappings:
            - ContainerPort: 9080
              Protocol: 'tcp'
          Environment:
            - Name: "SERVER_PORT"
              Value: "9080"
            - Name: "COLOR_TELLER_ENDPOINT"
              Value: !Sub "colorteller.${Prefix}-mesh.local:9080"
            - Name: "TCP_ECHO_ENDPOINT"
              Value: ""
            - Name: "STAGE"
              Value: ""
          DependsOn:
            - ContainerName: "envoy"
              Condition: "HEALTHY"
        - Name: envoy
          Image: subfuzion/aws-appmesh-envoy:v1.9.1.0-prod
          Essential: true
          User: '1337'
          Ulimits:
            - Name: "nofile"
              HardLimit: 15000
              SoftLimit: 15000
          PortMappings:
            - ContainerPort: 9901
              Protocol: 'tcp'
            - ContainerPort: 15000
              Protocol: 'tcp'
            - ContainerPort: 15001
              Protocol: 'tcp'
          HealthCheck:
            Command:
              - 'CMD-SHELL'
              - 'curl -s http://localhost:9901/server_info | grep state | grep -q LIVE'
            Interval: 5
            Timeout: 2
            Retries: 3
          LogConfiguration:
            LogDriver: 'awslogs'
            Options:
              awslogs-group: !Sub '${Prefix}-log-group'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: 'colorgateway'
          Environment:
            - Name: 'APPMESH_VIRTUAL_NODE_NAME'
              Value: !Sub 'mesh/${Prefix}-mesh/virtualNode/colorgateway-node'
            - Name: 'ENVOY_LOG_LEVEL'
              Value: 'debug'


